package org.sgine

import com.badlogic.gdx.graphics.{Color => GDXColor}

/**
 * Color provides a primitive wrapper around a Long representing a Color. This class takes up no more memory space than
 * a `Long` value and can be used to work powerfully around RGBA values.
 */
case class Color(value: Long) {
  lazy val gdx: GDXColor = new GDXColor(red.toFloat, green.toFloat, blue.toFloat, alpha.toFloat)

  def red: Double = redInt / 255.0
  def green: Double = greenInt / 255.0
  def blue: Double = blueInt / 255.0
  def alpha: Double = alphaInt / 255.0

  def redInt: Int = (value >> 24 & 0xff).toInt
  def greenInt: Int = (value >> 16 & 0xff).toInt
  def blueInt: Int = (value >> 8 & 0xff).toInt
  def alphaInt: Int = (value >> 0 & 0xff).toInt

  def redHex: String = Color.hexify(redInt)
  def greenHex: String = Color.hexify(greenInt)
  def blueHex: String = Color.hexify(blueInt)
  def alphaHex: String = Color.hexify(alphaInt)

  def withRed(red: Double): Color = Color.fromHex(s"${Color.hexify(red)}$greenHex$blueHex$alphaHex")
  def withGreen(green: Double): Color = Color.fromHex(s"$redHex${Color.hexify(green)}$blueHex$alphaHex")
  def withBlue(blue: Double): Color = Color.fromHex(s"$redHex$greenHex${Color.hexify(blue)}$alphaHex")
  def withAlpha(alpha: Double): Color = Color.fromHex(s"$redHex$greenHex$blueHex${Color.hexify(alpha)}")

  def toRGBA: String = s"rgba($redInt, $greenInt, $blueInt, $alpha)"
  def toHex: String = s"#$redHex$greenHex$blueHex"

  def hue: Double = {
    val colorMax = math.max(redInt, math.max(greenInt, blueInt))
    val colorMin = math.min(redInt, math.min(greenInt, blueInt))
    if (saturation == 0.0) {
      0.0
    } else {
      val red = (colorMax - redInt) / (colorMax - colorMin)
      val green = (colorMax - greenInt) / (colorMax - colorMin)
      val blue = (colorMax - blueInt) / (colorMax - colorMin)
      val t: Double = if (redInt == colorMax) {
        blue - green
      } else if (greenInt == colorMax) {
        2.0 + red - blue
      } else {
        4.0 + green - red
      }
      t / 6.0 match {
        case v if v < 0.0 => v + 1.0
        case v => v
      }
    }
  }

  def saturation: Double = {
    val colorMax = math.max(redInt, math.max(greenInt, blueInt))
    val colorMin = math.min(redInt, math.min(greenInt, blueInt))
    if (colorMax == 0) {
      0
    } else {
      (colorMax - colorMin).toDouble / colorMax.toDouble
    }
  }

  def brightness: Double = {
    val colorMax = math.max(redInt, math.max(greenInt, blueInt)).toDouble
    colorMax / 255.0
  }

  def withHue(hue: Double): Color = Color.fromHSB(hue, saturation, brightness)
  def withSaturation(saturation: Double): Color = Color.fromHSB(hue, saturation, brightness)
  def withBrightness(brightness: Double): Color = Color.fromHSB(hue, saturation, brightness)

  override def toString: String = s"Color(red: $red, green: $green, blue: $blue, alpha: $alpha)"
}

object Color {
  lazy val Clear: Color = fromLong(0x00000000)
  lazy val AbsoluteZero: Color = fromLong(0x0048BAFF)
  lazy val AcidGreen: Color = fromLong(0xB0BF1AFF)
  lazy val Aero: Color = fromLong(0x7CB9E8FF)
  lazy val AeroBlue: Color = fromLong(0xC0E8D5FF)
  lazy val AfricanViolet: Color = fromLong(0xB284BEFF)
  lazy val AirSuperiorityBlue: Color = fromLong(0x72A0C1FF)
  lazy val Alabaster: Color = fromLong(0xEDEAE0FF)
  lazy val Alizarin: Color = fromLong(0xDB2D43FF)
  lazy val AliceBlue: Color = fromLong(0xF0F8FFFF)
  lazy val AlloyOrange: Color = fromLong(0xC46210FF)
  lazy val Almond: Color = fromLong(0xEFDECDFF)
  lazy val Amaranth: Color = fromLong(0xE52B50FF)
  lazy val AmaranthMP: Color = fromLong(0x9F2B68FF)
  lazy val AmaranthPink: Color = fromLong(0xF19CBBFF)
  lazy val AmaranthPurple: Color = fromLong(0xAB274FFF)
  lazy val AmaranthRed: Color = fromLong(0xD3212DFF)
  lazy val Amazon: Color = fromLong(0x3B7A57FF)
  lazy val Amber: Color = fromLong(0xFFBF00FF)
  lazy val AmberSAEECE: Color = fromLong(0xFF7E00FF)
  lazy val Amethyst: Color = fromLong(0x9966CCFF)
  lazy val AndroidGreen: Color = fromLong(0x3DDC84FF)
  lazy val AntiqueBrass: Color = fromLong(0xCD9575FF)
  lazy val AntiqueBronze: Color = fromLong(0x665D1EFF)
  lazy val AntiqueFuchsia: Color = fromLong(0x915C83FF)
  lazy val AntiqueRuby: Color = fromLong(0x841B2DFF)
  lazy val AntiqueWhite: Color = fromLong(0xFAEBD7FF)
  lazy val AoEnglish: Color = fromLong(0x008000FF)
  lazy val AppleGreen: Color = fromLong(0x8DB600FF)
  lazy val Apricot: Color = fromLong(0xFBCEB1FF)
  lazy val Aqua: Color = fromLong(0x00FFFFFF)
  lazy val Aquamarine: Color = fromLong(0x7FFFD4FF)
  lazy val ArcticLime: Color = fromLong(0xD0FF14FF)
  lazy val ArmyGreen: Color = fromLong(0x4B5320FF)
  lazy val Artichoke: Color = fromLong(0x8F9779FF)
  lazy val ArylideYellow: Color = fromLong(0xE9D66BFF)
  lazy val AshGray: Color = fromLong(0xB2BEB5FF)
  lazy val Asparagus: Color = fromLong(0x87A96BFF)
  lazy val Astronaut: Color = fromLong(0x27346FFF)
  lazy val AtomicTangerine: Color = fromLong(0xFF9966FF)
  lazy val Auburn: Color = fromLong(0xA52A2AFF)
  lazy val Aureolin: Color = fromLong(0xFDEE00FF)
  lazy val Avocado: Color = fromLong(0x568203FF)
  lazy val Azure: Color = fromLong(0x007FFFFF)
  lazy val AzureX11WebColor: Color = fromLong(0xF0FFFFFF)
  lazy val BabyBlue: Color = fromLong(0x89CFF0FF)
  lazy val BabyBlueEyes: Color = fromLong(0xA1CAF1FF)
  lazy val BabyPink: Color = fromLong(0xF4C2C2FF)
  lazy val BabyPowder: Color = fromLong(0xFEFEFAFF)
  lazy val BakerMillerPink: Color = fromLong(0xFF91AFFF)
  lazy val BananaMania: Color = fromLong(0xFAE7B5FF)
  lazy val BarbiePink: Color = fromLong(0xDA1884FF)
  lazy val BarnRed: Color = fromLong(0x7C0A02FF)
  lazy val BattleshipGrey: Color = fromLong(0x848482FF)
  lazy val BeauBlue: Color = fromLong(0xBCD4E6FF)
  lazy val Beaver: Color = fromLong(0x9F8170FF)
  lazy val Beige: Color = fromLong(0xF5F5DCFF)
  lazy val BdazzledBlue: Color = fromLong(0x2E5894FF)
  lazy val BigDipOruby: Color = fromLong(0x9C2542FF)
  lazy val Bisque: Color = fromLong(0xFFE4C4FF)
  lazy val Bistre: Color = fromLong(0x3D2B1FFF)
  lazy val BistreBrown: Color = fromLong(0x967117FF)
  lazy val BitterLemon: Color = fromLong(0xCAE00DFF)
  lazy val BitterLime: Color = fromLong(0xBFFF00FF)
  lazy val Bittersweet: Color = fromLong(0xFE6F5EFF)
  lazy val BittersweetShimmer: Color = fromLong(0xBF4F51FF)
  lazy val Black: Color = fromLong(0x000000FF)
  lazy val BlackBean: Color = fromLong(0x3D0C02FF)
  lazy val BlackChocolate: Color = fromLong(0x1B1811FF)
  lazy val BlackCoffee: Color = fromLong(0x3B2F2FFF)
  lazy val BlackCoral: Color = fromLong(0x54626FFF)
  lazy val BlackOlive: Color = fromLong(0x3B3C36FF)
  lazy val BlackShadows: Color = fromLong(0xBFAFB2FF)
  lazy val BlanchedAlmond: Color = fromLong(0xFFEBCDFF)
  lazy val BlastOffBronze: Color = fromLong(0xA57164FF)
  lazy val BleuDeFrance: Color = fromLong(0x318CE7FF)
  lazy val BlizzardBlue: Color = fromLong(0xACE5EEFF)
  lazy val Blond: Color = fromLong(0xFAF0BEFF)
  lazy val BloodRed: Color = fromLong(0x660000FF)
  lazy val Blue: Color = fromLong(0x0000FFFF)
  lazy val BlueCrayola: Color = fromLong(0x1F75FEFF)
  lazy val BlueMunsell: Color = fromLong(0x0093AFFF)
  lazy val BlueNCS: Color = fromLong(0x0087BDFF)
  lazy val BluePantone: Color = fromLong(0x0018A8FF)
  lazy val BluePigment: Color = fromLong(0x333399FF)
  lazy val BlueRYB: Color = fromLong(0x0247FEFF)
  lazy val BlueBell: Color = fromLong(0xA2A2D0FF)
  lazy val BlueGray: Color = fromLong(0x6699CCFF)
  lazy val BlueGreen: Color = fromLong(0x0D98BAFF)
  lazy val BlueGreenColorWheel: Color = fromLong(0x064E40FF)
  lazy val BlueJeans: Color = fromLong(0x5DADECFF)
  lazy val BlueSapphire: Color = fromLong(0x126180FF)
  lazy val BlueViolet: Color = fromLong(0x8A2BE2FF)
  lazy val BlueVioletCrayola: Color = fromLong(0x7366BDFF)
  lazy val BlueVioletColorWheel: Color = fromLong(0x4D1A7FFF)
  lazy val BlueYonder: Color = fromLong(0x5072A7FF)
  lazy val Bluetiful: Color = fromLong(0x3C69E7FF)
  lazy val Blush: Color = fromLong(0xDE5D83FF)
  lazy val Bole: Color = fromLong(0x79443BFF)
  lazy val Bone: Color = fromLong(0xE3DAC9FF)
  lazy val BottleGreen: Color = fromLong(0x006A4EFF)
  lazy val Brandy: Color = fromLong(0x87413FFF)
  lazy val BrickRed: Color = fromLong(0xCB4154FF)
  lazy val BrightGreen: Color = fromLong(0x66FF00FF)
  lazy val BrightLilac: Color = fromLong(0xD891EFFF)
  lazy val BrightMaroon: Color = fromLong(0xC32148FF)
  lazy val BrightNavyBlue: Color = fromLong(0x1974D2FF)
  lazy val BrightYellowCrayola: Color = fromLong(0xFFAA1DFF)
  lazy val BrilliantRose: Color = fromLong(0xFF55A3FF)
  lazy val BrinkPink: Color = fromLong(0xFB607FFF)
  lazy val BritishRacingGreen: Color = fromLong(0x004225FF)
  lazy val Bronze: Color = fromLong(0xCD7F32FF)
  lazy val Brown: Color = fromLong(0x88540BFF)
  lazy val BrownSugar: Color = fromLong(0xAF6E4DFF)
  lazy val BrunswickGreen: Color = fromLong(0x1B4D3EFF)
  lazy val BudGreen: Color = fromLong(0x7BB661FF)
  lazy val Buff: Color = fromLong(0xFFC680FF)
  lazy val Burgundy: Color = fromLong(0x800020FF)
  lazy val Burlywood: Color = fromLong(0xDEB887FF)
  lazy val BurnishedBrown: Color = fromLong(0xA17A74FF)
  lazy val BurntOrange: Color = fromLong(0xCC5500FF)
  lazy val BurntSienna: Color = fromLong(0xE97451FF)
  lazy val BurntUmber: Color = fromLong(0x8A3324FF)
  lazy val Byzantine: Color = fromLong(0xBD33A4FF)
  lazy val Byzantium: Color = fromLong(0x702963FF)
  lazy val Cadet: Color = fromLong(0x536872FF)
  lazy val CadetBlue: Color = fromLong(0x5F9EA0FF)
  lazy val CadetBlueCrayola: Color = fromLong(0xA9B2C3FF)
  lazy val CadetGrey: Color = fromLong(0x91A3B0FF)
  lazy val CadmiumGreen: Color = fromLong(0x006B3CFF)
  lazy val CadmiumOrange: Color = fromLong(0xED872DFF)
  lazy val CadmiumRed: Color = fromLong(0xE30022FF)
  lazy val CadmiumYellow: Color = fromLong(0xFFF600FF)
  lazy val CafeAuLait: Color = fromLong(0xA67B5BFF)
  lazy val CafeNoir: Color = fromLong(0x4B3621FF)
  lazy val CambridgeBlue: Color = fromLong(0xA3C1ADFF)
  lazy val Camel: Color = fromLong(0xC19A6BFF)
  lazy val CameoPink: Color = fromLong(0xEFBBCCFF)
  lazy val Canary: Color = fromLong(0xFFFF99FF)
  lazy val CanaryYellow: Color = fromLong(0xFFEF00FF)
  lazy val CandyAppleRed: Color = fromLong(0xFF0800FF)
  lazy val CandyPink: Color = fromLong(0xE4717AFF)
  lazy val Capri: Color = fromLong(0x00BFFFFF)
  lazy val CaputMortuum: Color = fromLong(0x592720FF)
  lazy val Cardinal: Color = fromLong(0xC41E3AFF)
  lazy val CaribbeanGreen: Color = fromLong(0x00CC99FF)
  lazy val Carmine: Color = fromLong(0x960018FF)
  lazy val CarmineMP: Color = fromLong(0xD70040FF)
  lazy val CarnationPink: Color = fromLong(0xFFA6C9FF)
  lazy val Carnelian: Color = fromLong(0xB31B1BFF)
  lazy val CarolinaBlue: Color = fromLong(0x56A0D3FF)
  lazy val CarrotOrange: Color = fromLong(0xED9121FF)
  lazy val CastletonGreen: Color = fromLong(0x00563FFF)
  lazy val Catawba: Color = fromLong(0x703642FF)
  lazy val CedarChest: Color = fromLong(0xC95A49FF)
  lazy val Celadon: Color = fromLong(0xACE1AFFF)
  lazy val CeladonBlue: Color = fromLong(0x007BA7FF)
  lazy val CeladonGreen: Color = fromLong(0x2F847CFF)
  lazy val Celeste: Color = fromLong(0xB2FFFFFF)
  lazy val CelticBlue: Color = fromLong(0x246BCEFF)
  lazy val Cerise: Color = fromLong(0xDE3163FF)
  lazy val Cerulean: Color = fromLong(0x007BA7FF)
  lazy val CeruleanBlue: Color = fromLong(0x2A52BEFF)
  lazy val CeruleanFrost: Color = fromLong(0x6D9BC3FF)
  lazy val CeruleanCrayola: Color = fromLong(0x1DACD6FF)
  lazy val CGBlue: Color = fromLong(0x007AA5FF)
  lazy val CGRed: Color = fromLong(0xE03C31FF)
  lazy val Champagne: Color = fromLong(0xF7E7CEFF)
  lazy val ChampagnePink: Color = fromLong(0xF1DDCFFF)
  lazy val Charcoal: Color = fromLong(0x36454FFF)
  lazy val CharlestonGreen: Color = fromLong(0x232B2BFF)
  lazy val CharmPink: Color = fromLong(0xE68FACFF)
  lazy val ChartreuseTraditional: Color = fromLong(0xDFFF00FF)
  lazy val ChartreuseWeb: Color = fromLong(0x7FFF00FF)
  lazy val CherryBlossomPink: Color = fromLong(0xFFB7C5FF)
  lazy val Chestnut: Color = fromLong(0x954535FF)
  lazy val ChiliRed: Color = fromLong(0xE23D28FF)
  lazy val ChinaPink: Color = fromLong(0xDE6FA1FF)
  lazy val ChinaRose: Color = fromLong(0xA8516EFF)
  lazy val ChineseRed: Color = fromLong(0xAA381EFF)
  lazy val ChineseViolet: Color = fromLong(0x856088FF)
  lazy val ChineseYellow: Color = fromLong(0xFFB200FF)
  lazy val ChocolateTraditional: Color = fromLong(0x7B3F00FF)
  lazy val ChocolateWeb: Color = fromLong(0xD2691EFF)
  lazy val ChocolateCosmos: Color = fromLong(0x58111AFF)
  lazy val ChromeYellow: Color = fromLong(0xFFA700FF)
  lazy val Cinereous: Color = fromLong(0x98817BFF)
  lazy val Cinnabar: Color = fromLong(0xE34234FF)
  lazy val CinnamonSatin: Color = fromLong(0xCD607EFF)
  lazy val Citrine: Color = fromLong(0xE4D00AFF)
  lazy val Citron: Color = fromLong(0x9FA91FFF)
  lazy val Claret: Color = fromLong(0x7F1734FF)
  lazy val CobaltBlue: Color = fromLong(0x0047ABFF)
  lazy val CocoaBrown: Color = fromLong(0xD2691EFF)
  lazy val Coffee: Color = fromLong(0x6F4E37FF)
  lazy val ColumbiaBlue: Color = fromLong(0xB9D9EBFF)
  lazy val CongoPink: Color = fromLong(0xF88379FF)
  lazy val CoolGrey: Color = fromLong(0x8C92ACFF)
  lazy val Copper: Color = fromLong(0xB87333FF)
  lazy val CopperCrayola: Color = fromLong(0xDA8A67FF)
  lazy val CopperPenny: Color = fromLong(0xAD6F69FF)
  lazy val CopperRed: Color = fromLong(0xCB6D51FF)
  lazy val CopperRose: Color = fromLong(0x996666FF)
  lazy val Coquelicot: Color = fromLong(0xFF3800FF)
  lazy val Coral: Color = fromLong(0xFF7F50FF)
  lazy val CoralPink: Color = fromLong(0xF88379FF)
  lazy val Cordovan: Color = fromLong(0x893F45FF)
  lazy val Corn: Color = fromLong(0xFBEC5DFF)
  lazy val CornellRed: Color = fromLong(0xB31B1BFF)
  lazy val CornflowerBlue: Color = fromLong(0x6495EDFF)
  lazy val Cornsilk: Color = fromLong(0xFFF8DCFF)
  lazy val CosmicCobalt: Color = fromLong(0x2E2D88FF)
  lazy val CosmicLatte: Color = fromLong(0xFFF8E7FF)
  lazy val CoyoteBrown: Color = fromLong(0x81613CFF)
  lazy val CottonCandy: Color = fromLong(0xFFBCD9FF)
  lazy val Cream: Color = fromLong(0xFFFDD0FF)
  lazy val Crimson: Color = fromLong(0xDC143CFF)
  lazy val CrimsonUA: Color = fromLong(0x9E1B32FF)
  lazy val Crystal: Color = fromLong(0xA7D8DEFF)
  lazy val Cultured: Color = fromLong(0xF5F5F5FF)
  lazy val Cyan: Color = fromLong(0x00FFFFFF)
  lazy val CyanProcess: Color = fromLong(0x00B7EBFF)
  lazy val CyberGrape: Color = fromLong(0x58427CFF)
  lazy val CyberYellow: Color = fromLong(0xFFD300FF)
  lazy val Cyclamen: Color = fromLong(0xF56FA1FF)
  lazy val DarkBlueGray: Color = fromLong(0x666699FF)
  lazy val DarkBrown: Color = fromLong(0x654321FF)
  lazy val DarkByzantium: Color = fromLong(0x5D3954FF)
  lazy val DarkCornflowerBlue: Color = fromLong(0x26428BFF)
  lazy val DarkCyan: Color = fromLong(0x008B8BFF)
  lazy val DarkElectricBlue: Color = fromLong(0x536878FF)
  lazy val DarkGoldenrod: Color = fromLong(0xB8860BFF)
  lazy val DarkGreen: Color = fromLong(0x013220FF)
  lazy val DarkGreenX11: Color = fromLong(0x006400FF)
  lazy val DarkJungleGreen: Color = fromLong(0x1A2421FF)
  lazy val DarkKhaki: Color = fromLong(0xBDB76BFF)
  lazy val DarkLava: Color = fromLong(0x483C32FF)
  lazy val DarkLiver: Color = fromLong(0x534B4FFF)
  lazy val DarkLiverHorses: Color = fromLong(0x543D37FF)
  lazy val DarkMagenta: Color = fromLong(0x8B008BFF)
  lazy val DarkMossGreen: Color = fromLong(0x4A5D23FF)
  lazy val DarkOliveGreen: Color = fromLong(0x556B2FFF)
  lazy val DarkOrange: Color = fromLong(0xFF8C00FF)
  lazy val DarkOrchid: Color = fromLong(0x9932CCFF)
  lazy val DarkPastelGreen: Color = fromLong(0x03C03CFF)
  lazy val DarkPurple: Color = fromLong(0x301934FF)
  lazy val DarkRed: Color = fromLong(0x8B0000FF)
  lazy val DarkSalmon: Color = fromLong(0xE9967AFF)
  lazy val DarkSeaGreen: Color = fromLong(0x8FBC8FFF)
  lazy val DarkSienna: Color = fromLong(0x3C1414FF)
  lazy val DarkSkyBlue: Color = fromLong(0x8CBED6FF)
  lazy val DarkSlateBlue: Color = fromLong(0x483D8BFF)
  lazy val DarkSlateGray: Color = fromLong(0x2F4F4FFF)
  lazy val DarkSpringGreen: Color = fromLong(0x177245FF)
  lazy val DarkTurquoise: Color = fromLong(0x00CED1FF)
  lazy val DarkViolet: Color = fromLong(0x9400D3FF)
  lazy val DartmouthGreen: Color = fromLong(0x00703CFF)
  lazy val DavysGrey: Color = fromLong(0x555555FF)
  lazy val DeepCerise: Color = fromLong(0xDA3287FF)
  lazy val DeepChampagne: Color = fromLong(0xFAD6A5FF)
  lazy val DeepChestnut: Color = fromLong(0xB94E48FF)
  lazy val DeepJungleGreen: Color = fromLong(0x004B49FF)
  lazy val DeepPink: Color = fromLong(0xFF1493FF)
  lazy val DeepSaffron: Color = fromLong(0xFF9933FF)
  lazy val DeepSkyBlue: Color = fromLong(0x00BFFFFF)
  lazy val DeepSpaceSparkle: Color = fromLong(0x4A646CFF)
  lazy val DeepTaupe: Color = fromLong(0x7E5E60FF)
  lazy val Denim: Color = fromLong(0x1560BDFF)
  lazy val DenimBlue: Color = fromLong(0x2243B6FF)
  lazy val Desert: Color = fromLong(0xC19A6BFF)
  lazy val DesertSand: Color = fromLong(0xEDC9AFFF)
  lazy val DimGray: Color = fromLong(0x696969FF)
  lazy val DodgerBlue: Color = fromLong(0x1E90FFFF)
  lazy val DogwoodRose: Color = fromLong(0xD71868FF)
  lazy val Drab: Color = fromLong(0x967117FF)
  lazy val DukeBlue: Color = fromLong(0x00009CFF)
  lazy val DutchWhite: Color = fromLong(0xEFDFBBFF)
  lazy val EarthYellow: Color = fromLong(0xE1A95FFF)
  lazy val Ebony: Color = fromLong(0x555D50FF)
  lazy val Ecru: Color = fromLong(0xC2B280FF)
  lazy val EerieBlack: Color = fromLong(0x1B1B1BFF)
  lazy val Eggplant: Color = fromLong(0x614051FF)
  lazy val Eggshell: Color = fromLong(0xF0EAD6FF)
  lazy val EgyptianBlue: Color = fromLong(0x1034A6FF)
  lazy val Eigengrau: Color = fromLong(0x16161DFF)
  lazy val ElectricBlue: Color = fromLong(0x7DF9FFFF)
  lazy val ElectricGreen: Color = fromLong(0x00FF00FF)
  lazy val ElectricIndigo: Color = fromLong(0x6F00FFFF)
  lazy val ElectricLime: Color = fromLong(0xCCFF00FF)
  lazy val ElectricPurple: Color = fromLong(0xBF00FFFF)
  lazy val ElectricViolet: Color = fromLong(0x8F00FFFF)
  lazy val Emerald: Color = fromLong(0x50C878FF)
  lazy val Eminence: Color = fromLong(0x6C3082FF)
  lazy val EnglishGreen: Color = fromLong(0x1B4D3EFF)
  lazy val EnglishLavender: Color = fromLong(0xB48395FF)
  lazy val EnglishRed: Color = fromLong(0xAB4B52FF)
  lazy val EnglishVermillion: Color = fromLong(0xCC474BFF)
  lazy val EnglishViolet: Color = fromLong(0x563C5CFF)
  lazy val Erin: Color = fromLong(0x00FF40FF)
  lazy val EtonBlue: Color = fromLong(0x96C8A2FF)
  lazy val Fallow: Color = fromLong(0xC19A6BFF)
  lazy val FaluRed: Color = fromLong(0x801818FF)
  lazy val Fandango: Color = fromLong(0xB53389FF)
  lazy val FandangoPink: Color = fromLong(0xDE5285FF)
  lazy val FashionFuchsia: Color = fromLong(0xF400A1FF)
  lazy val Fawn: Color = fromLong(0xE5AA70FF)
  lazy val Feldgrau: Color = fromLong(0x4D5D53FF)
  lazy val FernGreen: Color = fromLong(0x4F7942FF)
  lazy val FieldDrab: Color = fromLong(0x6C541EFF)
  lazy val FieryRose: Color = fromLong(0xFF5470FF)
  lazy val Finn: Color = fromLong(0x683068FF)
  lazy val Firebrick: Color = fromLong(0xB22222FF)
  lazy val FireEngineRed: Color = fromLong(0xCE2029FF)
  lazy val FireOpal: Color = fromLong(0xE95C4BFF)
  lazy val Flame: Color = fromLong(0xE25822FF)
  lazy val Flax: Color = fromLong(0xEEDC82FF)
  lazy val Flirt: Color = fromLong(0xA2006DFF)
  lazy val FloralWhite: Color = fromLong(0xFFFAF0FF)
  lazy val FluorescentBlue: Color = fromLong(0x15F4EEFF)
  lazy val ForestGreenCrayola: Color = fromLong(0x5FA777FF)
  lazy val ForestGreenTraditional: Color = fromLong(0x014421FF)
  lazy val ForestGreenWeb: Color = fromLong(0x228B22FF)
  lazy val FrenchBeige: Color = fromLong(0xA67B5BFF)
  lazy val FrenchBistre: Color = fromLong(0x856D4DFF)
  lazy val FrenchBlue: Color = fromLong(0x0072BBFF)
  lazy val FrenchFuchsia: Color = fromLong(0xFD3F92FF)
  lazy val FrenchLilac: Color = fromLong(0x86608EFF)
  lazy val FrenchLime: Color = fromLong(0x9EFD38FF)
  lazy val FrenchMauve: Color = fromLong(0xD473D4FF)
  lazy val FrenchPink: Color = fromLong(0xFD6C9EFF)
  lazy val FrenchRaspberry: Color = fromLong(0xC72C48FF)
  lazy val FrenchRose: Color = fromLong(0xF64A8AFF)
  lazy val FrenchSkyBlue: Color = fromLong(0x77B5FEFF)
  lazy val FrenchViolet: Color = fromLong(0x8806CEFF)
  lazy val Frostbite: Color = fromLong(0xE936A7FF)
  lazy val Fuchsia: Color = fromLong(0xFF00FFFF)
  lazy val FuchsiaCrayola: Color = fromLong(0xC154C1FF)
  lazy val FuchsiaPurple: Color = fromLong(0xCC397BFF)
  lazy val FuchsiaRose: Color = fromLong(0xC74375FF)
  lazy val Fulvous: Color = fromLong(0xE48400FF)
  lazy val FuzzyWuzzy: Color = fromLong(0x87421FFF)
  lazy val Gainsboro: Color = fromLong(0xDCDCDCFF)
  lazy val Gamboge: Color = fromLong(0xE49B0FFF)
  lazy val GenericViridian: Color = fromLong(0x007F66FF)
  lazy val GhostWhite: Color = fromLong(0xF8F8FFFF)
  lazy val Glaucous: Color = fromLong(0x6082B6FF)
  lazy val GlossyGrape: Color = fromLong(0xAB92B3FF)
  lazy val GOGreen: Color = fromLong(0x00AB66FF)
  lazy val Gold: Color = fromLong(0xA57C00FF)
  lazy val GoldMetallic: Color = fromLong(0xD4AF37FF)
  lazy val GoldWebGolden: Color = fromLong(0xFFD700FF)
  lazy val GoldCrayola: Color = fromLong(0xE6BE8AFF)
  lazy val GoldFusion: Color = fromLong(0x85754EFF)
  lazy val GoldenBrown: Color = fromLong(0x996515FF)
  lazy val GoldenPoppy: Color = fromLong(0xFCC200FF)
  lazy val GoldenYellow: Color = fromLong(0xFFDF00FF)
  lazy val Goldenrod: Color = fromLong(0xDAA520FF)
  lazy val GothamGreen: Color = fromLong(0x00573FFF)
  lazy val GraniteGray: Color = fromLong(0x676767FF)
  lazy val GrannySmithApple: Color = fromLong(0xA8E4A0FF)
  lazy val GrayWeb: Color = fromLong(0x808080FF)
  lazy val GrayX11Gray: Color = fromLong(0xBEBEBEFF)
  lazy val Green: Color = fromLong(0x00FF00FF)
  lazy val GreenCrayola: Color = fromLong(0x1CAC78FF)
  lazy val GreenWeb: Color = fromLong(0x008000FF)
  lazy val GreenMunsell: Color = fromLong(0x00A877FF)
  lazy val GreenNCS: Color = fromLong(0x009F6BFF)
  lazy val GreenPantone: Color = fromLong(0x00AD43FF)
  lazy val GreenPigment: Color = fromLong(0x00A550FF)
  lazy val GreenRYB: Color = fromLong(0x66B032FF)
  lazy val GreenBlue: Color = fromLong(0x1164B4FF)
  lazy val GreenBlueCrayola: Color = fromLong(0x2887C8FF)
  lazy val GreenCyan: Color = fromLong(0x009966FF)
  lazy val GreenLizard: Color = fromLong(0xA7F432FF)
  lazy val GreenSheen: Color = fromLong(0x6EAEA1FF)
  lazy val GreenYellow: Color = fromLong(0xADFF2FFF)
  lazy val GreenYellowCrayola: Color = fromLong(0xF0E891FF)
  lazy val Grullo: Color = fromLong(0xA99A86FF)
  lazy val Gunmetal: Color = fromLong(0x2a3439FF)
  lazy val HanBlue: Color = fromLong(0x446CCFFF)
  lazy val HanPurple: Color = fromLong(0x5218FAFF)
  lazy val HansaYellow: Color = fromLong(0xE9D66BFF)
  lazy val Harlequin: Color = fromLong(0x3FFF00FF)
  lazy val HarvestGold: Color = fromLong(0xDA9100FF)
  lazy val HeatWave: Color = fromLong(0xFF7A00FF)
  lazy val Heliotrope: Color = fromLong(0xDF73FFFF)
  lazy val HeliotropeGray: Color = fromLong(0xAA98A9FF)
  lazy val HollywoodCerise: Color = fromLong(0xF400A1FF)
  lazy val Honeydew: Color = fromLong(0xF0FFF0FF)
  lazy val HonoluluBlue: Color = fromLong(0x006DB0FF)
  lazy val HookersGreen: Color = fromLong(0x49796BFF)
  lazy val HotMagenta: Color = fromLong(0xFF1DCEFF)
  lazy val HotPink: Color = fromLong(0xFF69B4FF)
  lazy val HunterGreen: Color = fromLong(0x355E3BFF)
  lazy val Iceberg: Color = fromLong(0x71A6D2FF)
  lazy val Icterine: Color = fromLong(0xFCF75EFF)
  lazy val IlluminatingEmerald: Color = fromLong(0x319177FF)
  lazy val ImperialRed: Color = fromLong(0xED2939FF)
  lazy val Inchworm: Color = fromLong(0xB2EC5DFF)
  lazy val Independence: Color = fromLong(0x4C516DFF)
  lazy val IndiaGreen: Color = fromLong(0x138808FF)
  lazy val IndianRed: Color = fromLong(0xCD5C5CFF)
  lazy val IndianYellow: Color = fromLong(0xE3A857FF)
  lazy val Indigo: Color = fromLong(0x4B0082FF)
  lazy val IndigoDye: Color = fromLong(0x00416AFF)
  lazy val Infrared: Color = fromLong(0xFF496CFF)
  lazy val InternationalKleinBlue: Color = fromLong(0x130a8fFF)
  lazy val InternationalOrangeAerospace: Color = fromLong(0xFF4F00FF)
  lazy val InternationalOrangeEngineering: Color = fromLong(0xBA160CFF)
  lazy val InternationalOrangeGoldenGateBridge: Color = fromLong(0xC0362CFF)
  lazy val Iris: Color = fromLong(0x5A4FCFFF)
  lazy val Irresistible: Color = fromLong(0xB3446CFF)
  lazy val Isabelline: Color = fromLong(0xF4F0ECFF)
  lazy val ItalianSkyBlue: Color = fromLong(0xB2FFFFFF)
  lazy val Ivory: Color = fromLong(0xFFFFF0FF)
  lazy val Jade: Color = fromLong(0x00A86BFF)
  lazy val JapaneseCarmine: Color = fromLong(0x9D2933FF)
  lazy val JapaneseViolet: Color = fromLong(0x5B3256FF)
  lazy val Jasmine: Color = fromLong(0xF8DE7EFF)
  lazy val JazzberryJam: Color = fromLong(0xA50B5EFF)
  lazy val Jet: Color = fromLong(0x343434FF)
  lazy val Jonquil: Color = fromLong(0xF4CA16FF)
  lazy val JuneBud: Color = fromLong(0xBDDA57FF)
  lazy val JungleGreen: Color = fromLong(0x29AB87FF)
  lazy val KellyGreen: Color = fromLong(0x4CBB17FF)
  lazy val Keppel: Color = fromLong(0x3AB09EFF)
  lazy val KeyLime: Color = fromLong(0xE8F48CFF)
  lazy val KhakiWeb: Color = fromLong(0xC3B091FF)
  lazy val KhakiX11LightKhaki: Color = fromLong(0xF0E68CFF)
  lazy val Kobe: Color = fromLong(0x882D17FF)
  lazy val Kobi: Color = fromLong(0xE79FC4FF)
  lazy val Kobicha: Color = fromLong(0x6B4423FF)
  lazy val KombuGreen: Color = fromLong(0x354230FF)
  lazy val KSUPurple: Color = fromLong(0x512888FF)
  lazy val LanguidLavender: Color = fromLong(0xD6CADDFF)
  lazy val LapisLazuli: Color = fromLong(0x26619CFF)
  lazy val LaserLemon: Color = fromLong(0xFFFF66FF)
  lazy val LaurelGreen: Color = fromLong(0xA9BA9DFF)
  lazy val Lava: Color = fromLong(0xCF1020FF)
  lazy val LavenderFloral: Color = fromLong(0xB57EDCFF)
  lazy val LavenderWeb: Color = fromLong(0xE6E6FAFF)
  lazy val LavenderBlue: Color = fromLong(0xCCCCFFFF)
  lazy val LavenderBlush: Color = fromLong(0xFFF0F5FF)
  lazy val LavenderGray: Color = fromLong(0xC4C3D0FF)
  lazy val LawnGreen: Color = fromLong(0x7CFC00FF)
  lazy val Lemon: Color = fromLong(0xFFF700FF)
  lazy val LemonChiffon: Color = fromLong(0xFFFACDFF)
  lazy val LemonCurry: Color = fromLong(0xCCA01DFF)
  lazy val LemonGlacier: Color = fromLong(0xFDFF00FF)
  lazy val LemonMeringue: Color = fromLong(0xF6EABEFF)
  lazy val LemonYellow: Color = fromLong(0xFFF44FFF)
  lazy val LemonYellowCrayola: Color = fromLong(0xFFFF9FFF)
  lazy val Liberty: Color = fromLong(0x545AA7FF)
  lazy val LightBlue: Color = fromLong(0xADD8E6FF)
  lazy val LightCoral: Color = fromLong(0xF08080FF)
  lazy val LightCornflowerBlue: Color = fromLong(0x93CCEAFF)
  lazy val LightCyan: Color = fromLong(0xE0FFFFFF)
  lazy val LightFrenchBeige: Color = fromLong(0xC8AD7FFF)
  lazy val LightGoldenrodYellow: Color = fromLong(0xFAFAD2FF)
  lazy val LightGray: Color = fromLong(0xD3D3D3FF)
  lazy val LightGreen: Color = fromLong(0x90EE90FF)
  lazy val LightOrange: Color = fromLong(0xFED8B1FF)
  lazy val LightPeriwinkle: Color = fromLong(0xC5CBE1FF)
  lazy val LightPink: Color = fromLong(0xFFB6C1FF)
  lazy val LightSalmon: Color = fromLong(0xFFA07AFF)
  lazy val LightSeaGreen: Color = fromLong(0x20B2AAFF)
  lazy val LightSkyBlue: Color = fromLong(0x87CEFAFF)
  lazy val LightSlateGray: Color = fromLong(0x778899FF)
  lazy val LightSteelBlue: Color = fromLong(0xB0C4DEFF)
  lazy val LightYellow: Color = fromLong(0xFFFFE0FF)
  lazy val Lilac: Color = fromLong(0xC8A2C8FF)
  lazy val LilacLuster: Color = fromLong(0xAE98AAFF)
  lazy val LimeColorWheel: Color = fromLong(0xBFFF00FF)
  lazy val LimeWebX11Green: Color = fromLong(0x00FF00FF)
  lazy val LimeGreen: Color = fromLong(0x32CD32FF)
  lazy val LincolnGreen: Color = fromLong(0x195905FF)
  lazy val Linen: Color = fromLong(0xFAF0E6FF)
  lazy val Lion: Color = fromLong(0xC19A6BFF)
  lazy val LiseranPurple: Color = fromLong(0xDE6FA1FF)
  lazy val LittleBoyBlue: Color = fromLong(0x6CA0DCFF)
  lazy val Liver: Color = fromLong(0x674C47FF)
  lazy val LiverDogs: Color = fromLong(0xB86D29FF)
  lazy val LiverOrgan: Color = fromLong(0x6C2E1FFF)
  lazy val LiverChestnut: Color = fromLong(0x987456FF)
  lazy val Livid: Color = fromLong(0x6699CCFF)
  lazy val MacaroniAndCheese: Color = fromLong(0xFFBD88FF)
  lazy val MadderLake: Color = fromLong(0xCC3336FF)
  lazy val Magenta: Color = fromLong(0xFF00FFFF)
  lazy val MagentaCrayola: Color = fromLong(0xF653A6FF)
  lazy val MagentaDye: Color = fromLong(0xCA1F7BFF)
  lazy val MagentaPantone: Color = fromLong(0xD0417EFF)
  lazy val MagentaProcess: Color = fromLong(0xFF0090FF)
  lazy val MagentaHaze: Color = fromLong(0x9F4576FF)
  lazy val MagicMint: Color = fromLong(0xAAF0D1FF)
  lazy val Magnolia: Color = fromLong(0xF2E8D7FF)
  lazy val Mahogany: Color = fromLong(0xC04000FF)
  lazy val Maize: Color = fromLong(0xFBEC5DFF)
  lazy val MaizeCrayola: Color = fromLong(0xF2C649FF)
  lazy val MajorelleBlue: Color = fromLong(0x6050DCFF)
  lazy val Malachite: Color = fromLong(0x0BDA51FF)
  lazy val Manatee: Color = fromLong(0x979AAAFF)
  lazy val Mandarin: Color = fromLong(0xF37A48FF)
  lazy val Mango: Color = fromLong(0xFDBE02FF)
  lazy val MangoTango: Color = fromLong(0xFF8243FF)
  lazy val Mantis: Color = fromLong(0x74C365FF)
  lazy val MardiGras: Color = fromLong(0x880085FF)
  lazy val Marigold: Color = fromLong(0xEAA221FF)
  lazy val MaroonCrayola: Color = fromLong(0xC32148FF)
  lazy val MaroonWeb: Color = fromLong(0x800000FF)
  lazy val MaroonX11: Color = fromLong(0xB03060FF)
  lazy val Mauve: Color = fromLong(0xE0B0FFFF)
  lazy val MauveTaupe: Color = fromLong(0x915F6DFF)
  lazy val Mauvelous: Color = fromLong(0xEF98AAFF)
  lazy val MaximumBlue: Color = fromLong(0x47ABCCFF)
  lazy val MaximumBlueGreen: Color = fromLong(0x30BFBFFF)
  lazy val MaximumBluePurple: Color = fromLong(0xACACE6FF)
  lazy val MaximumGreen: Color = fromLong(0x5E8C31FF)
  lazy val MaximumGreenYellow: Color = fromLong(0xD9E650FF)
  lazy val MaximumPurple: Color = fromLong(0x733380FF)
  lazy val MaximumRed: Color = fromLong(0xD92121FF)
  lazy val MaximumRedPurple: Color = fromLong(0xA63A79FF)
  lazy val MaximumYellow: Color = fromLong(0xFAFA37FF)
  lazy val MaximumYellowRed: Color = fromLong(0xF2BA49FF)
  lazy val MayGreen: Color = fromLong(0x4C9141FF)
  lazy val MayaBlue: Color = fromLong(0x73C2FBFF)
  lazy val MediumAquamarine: Color = fromLong(0x66DDAAFF)
  lazy val MediumBlue: Color = fromLong(0x0000CDFF)
  lazy val MediumCandyAppleRed: Color = fromLong(0xE2062CFF)
  lazy val MediumCarmine: Color = fromLong(0xAF4035FF)
  lazy val MediumChampagne: Color = fromLong(0xF3E5ABFF)
  lazy val MediumOrchid: Color = fromLong(0xBA55D3FF)
  lazy val MediumPurple: Color = fromLong(0x9370DBFF)
  lazy val MediumSeaGreen: Color = fromLong(0x3CB371FF)
  lazy val MediumSlateBlue: Color = fromLong(0x7B68EEFF)
  lazy val MediumSpringGreen: Color = fromLong(0x00FA9AFF)
  lazy val MediumTurquoise: Color = fromLong(0x48D1CCFF)
  lazy val MediumVioletRed: Color = fromLong(0xC71585FF)
  lazy val MellowApricot: Color = fromLong(0xF8B878FF)
  lazy val MellowYellow: Color = fromLong(0xF8DE7EFF)
  lazy val Melon: Color = fromLong(0xFEBAADFF)
  lazy val MetallicGold: Color = fromLong(0xD3AF37FF)
  lazy val MetallicSeaweed: Color = fromLong(0x0A7E8CFF)
  lazy val MetallicSunburst: Color = fromLong(0x9C7C38FF)
  lazy val MexicanPink: Color = fromLong(0xE4007CFF)
  lazy val MiddleBlue: Color = fromLong(0x7ED4E6FF)
  lazy val MiddleBlueGreen: Color = fromLong(0x8DD9CCFF)
  lazy val MiddleBluePurple: Color = fromLong(0x8B72BEFF)
  lazy val MiddleGrey: Color = fromLong(0x8B8680FF)
  lazy val MiddleGreen: Color = fromLong(0x4D8C57FF)
  lazy val MiddleGreenYellow: Color = fromLong(0xACBF60FF)
  lazy val MiddlePurple: Color = fromLong(0xD982B5FF)
  lazy val MiddleRed: Color = fromLong(0xE58E73FF)
  lazy val MiddleRedPurple: Color = fromLong(0xA55353FF)
  lazy val MiddleYellow: Color = fromLong(0xFFEB00FF)
  lazy val MiddleYellowRed: Color = fromLong(0xECB176FF)
  lazy val Midnight: Color = fromLong(0x702670FF)
  lazy val MidnightBlue: Color = fromLong(0x191970FF)
  lazy val MidnightGreenEagleGreen: Color = fromLong(0x004953FF)
  lazy val MikadoYellow: Color = fromLong(0xFFC40CFF)
  lazy val MimiPink: Color = fromLong(0xFFDAE9FF)
  lazy val Mindaro: Color = fromLong(0xE3F988FF)
  lazy val Ming: Color = fromLong(0x36747DFF)
  lazy val MinionYellow: Color = fromLong(0xF5E050FF)
  lazy val Mint: Color = fromLong(0x3EB489FF)
  lazy val MintCream: Color = fromLong(0xF5FFFAFF)
  lazy val MintGreen: Color = fromLong(0x98FF98FF)
  lazy val MistyMoss: Color = fromLong(0xBBB477FF)
  lazy val MistyRose: Color = fromLong(0xFFE4E1FF)
  lazy val ModeBeige: Color = fromLong(0x967117FF)
  lazy val MorningBlue: Color = fromLong(0x8DA399FF)
  lazy val MossGreen: Color = fromLong(0x8A9A5BFF)
  lazy val MountainMeadow: Color = fromLong(0x30BA8FFF)
  lazy val MountbattenPink: Color = fromLong(0x997A8DFF)
  lazy val MSUGreen: Color = fromLong(0x18453BFF)
  lazy val Mulberry: Color = fromLong(0xC54B8CFF)
  lazy val MulberryCrayola: Color = fromLong(0xC8509BFF)
  lazy val Mustard: Color = fromLong(0xFFDB58FF)
  lazy val MyrtleGreen: Color = fromLong(0x317873FF)
  lazy val Mystic: Color = fromLong(0xD65282FF)
  lazy val MysticMaroon: Color = fromLong(0xAD4379FF)
  lazy val NadeshikoPink: Color = fromLong(0xF6ADC6FF)
  lazy val NaplesYellow: Color = fromLong(0xFADA5EFF)
  lazy val NavajoWhite: Color = fromLong(0xFFDEADFF)
  lazy val NavyBlue: Color = fromLong(0x000080FF)
  lazy val NavyBlueCrayola: Color = fromLong(0x1974D2FF)
  lazy val NeonBlue: Color = fromLong(0x4666FFFF)
  lazy val NeonCarrot: Color = fromLong(0xFFA343FF)
  lazy val NeonGreen: Color = fromLong(0x39FF14FF)
  lazy val NeonFuchsia: Color = fromLong(0xFE4164FF)
  lazy val NewYorkPink: Color = fromLong(0xD7837FFF)
  lazy val Nickel: Color = fromLong(0x727472FF)
  lazy val NonPhotoBlue: Color = fromLong(0xA4DDEDFF)
  lazy val Nyanza: Color = fromLong(0xE9FFDBFF)
  lazy val OceanBlue: Color = fromLong(0x4F42B5FF)
  lazy val OceanGreen: Color = fromLong(0x48BF91FF)
  lazy val Ochre: Color = fromLong(0xCC7722FF)
  lazy val OldBurgundy: Color = fromLong(0x43302EFF)
  lazy val OldGold: Color = fromLong(0xCFB53BFF)
  lazy val OldLace: Color = fromLong(0xFDF5E6FF)
  lazy val OldLavender: Color = fromLong(0x796878FF)
  lazy val OldMauve: Color = fromLong(0x673147FF)
  lazy val OldRose: Color = fromLong(0xC08081FF)
  lazy val OldSilver: Color = fromLong(0x848482FF)
  lazy val Olive: Color = fromLong(0x808000FF)
  lazy val OliveDrab3: Color = fromLong(0x6B8E23FF)
  lazy val OliveDrab7: Color = fromLong(0x3C341FFF)
  lazy val OliveGreen: Color = fromLong(0xB5B35CFF)
  lazy val Olivine: Color = fromLong(0x9AB973FF)
  lazy val Onyx: Color = fromLong(0x353839FF)
  lazy val Opal: Color = fromLong(0xA8C3BCFF)
  lazy val OperaMauve: Color = fromLong(0xB784A7FF)
  lazy val Orange: Color = fromLong(0xFF7F00FF)
  lazy val OrangeCrayola: Color = fromLong(0xFF7538FF)
  lazy val OrangePantone: Color = fromLong(0xFF5800FF)
  lazy val OrangeWeb: Color = fromLong(0xFFA500FF)
  lazy val OrangePeel: Color = fromLong(0xFF9F00FF)
  lazy val OrangeRed: Color = fromLong(0xFF681FFF)
  lazy val OrangeRedCrayola: Color = fromLong(0xFF5349FF)
  lazy val OrangeSoda: Color = fromLong(0xFA5B3DFF)
  lazy val OrangeYellow: Color = fromLong(0xF5BD1FFF)
  lazy val OrangeYellowCrayola: Color = fromLong(0xF8D568FF)
  lazy val Orchid: Color = fromLong(0xDA70D6FF)
  lazy val OrchidPink: Color = fromLong(0xF2BDCDFF)
  lazy val OrchidCrayola: Color = fromLong(0xE29CD2FF)
  lazy val OuterSpaceCrayola: Color = fromLong(0x2D383AFF)
  lazy val OutrageousOrange: Color = fromLong(0xFF6E4AFF)
  lazy val Oxblood: Color = fromLong(0x4A0000FF)
  lazy val OxfordBlue: Color = fromLong(0x002147FF)
  lazy val OUCrimsonRed: Color = fromLong(0x841617FF)
  lazy val PacificBlue: Color = fromLong(0x1CA9C9FF)
  lazy val PakistanGreen: Color = fromLong(0x006600FF)
  lazy val PalatinatePurple: Color = fromLong(0x682860FF)
  lazy val PaleAqua: Color = fromLong(0xBCD4E6FF)
  lazy val PaleCerulean: Color = fromLong(0x9BC4E2FF)
  lazy val PaleDogwood: Color = fromLong(0xED7A9BFF)
  lazy val PalePink: Color = fromLong(0xFADADDFF)
  lazy val PalePurplePantone: Color = fromLong(0xFAE6FAFF)
  lazy val PaleSilver: Color = fromLong(0xC9C0BBFF)
  lazy val PaleSpringBud: Color = fromLong(0xECEBBDFF)
  lazy val PansyPurple: Color = fromLong(0x78184AFF)
  lazy val PaoloVeroneseGreen: Color = fromLong(0x009B7DFF)
  lazy val PapayaWhip: Color = fromLong(0xFFEFD5FF)
  lazy val ParadisePink: Color = fromLong(0xE63E62FF)
  lazy val Parchment: Color = fromLong(0xF1E9D2FF)
  lazy val ParisGreen: Color = fromLong(0x50C878FF)
  lazy val PastelPink: Color = fromLong(0xDEA5A4FF)
  lazy val Patriarch: Color = fromLong(0x800080FF)
  lazy val PaynesGrey: Color = fromLong(0x536878FF)
  lazy val Peach: Color = fromLong(0xFFE5B4FF)
  lazy val PeachCrayola: Color = fromLong(0xFFCBA4FF)
  lazy val PeachPuff: Color = fromLong(0xFFDAB9FF)
  lazy val Pear: Color = fromLong(0xD1E231FF)
  lazy val PearlyPurple: Color = fromLong(0xB768A2FF)
  lazy val Periwinkle: Color = fromLong(0xCCCCFFFF)
  lazy val PeriwinkleCrayola: Color = fromLong(0xC3CDE6FF)
  lazy val PermanentGeraniumLake: Color = fromLong(0xE12C2CFF)
  lazy val PersianBlue: Color = fromLong(0x1C39BBFF)
  lazy val PersianGreen: Color = fromLong(0x00A693FF)
  lazy val PersianIndigo: Color = fromLong(0x32127AFF)
  lazy val PersianOrange: Color = fromLong(0xD99058FF)
  lazy val PersianPink: Color = fromLong(0xF77FBEFF)
  lazy val PersianPlum: Color = fromLong(0x701C1CFF)
  lazy val PersianRed: Color = fromLong(0xCC3333FF)
  lazy val PersianRose: Color = fromLong(0xFE28A2FF)
  lazy val Persimmon: Color = fromLong(0xEC5800FF)
  lazy val PewterBlue: Color = fromLong(0x8BA8B7FF)
  lazy val Phlox: Color = fromLong(0xDF00FFFF)
  lazy val PhthaloBlue: Color = fromLong(0x000F89FF)
  lazy val PhthaloGreen: Color = fromLong(0x123524FF)
  lazy val PicoteeBlue: Color = fromLong(0x2E2787FF)
  lazy val PictorialCarmine: Color = fromLong(0xC30B4EFF)
  lazy val PiggyPink: Color = fromLong(0xFDDDE6FF)
  lazy val PineGreen: Color = fromLong(0x01796FFF)
  lazy val PineTree: Color = fromLong(0x2A2F23FF)
  lazy val Pink: Color = fromLong(0xFFC0CBFF)
  lazy val PinkPantone: Color = fromLong(0xD74894FF)
  lazy val PinkFlamingo: Color = fromLong(0xFC74FDFF)
  lazy val PinkLace: Color = fromLong(0xFFDDF4FF)
  lazy val PinkLavender: Color = fromLong(0xD8B2D1FF)
  lazy val PinkSherbet: Color = fromLong(0xF78FA7FF)
  lazy val Pistachio: Color = fromLong(0x93C572FF)
  lazy val Platinum: Color = fromLong(0xE5E4E2FF)
  lazy val Plum: Color = fromLong(0x8E4585FF)
  lazy val PlumWeb: Color = fromLong(0xDDA0DDFF)
  lazy val PlumpPurple: Color = fromLong(0x5946B2FF)
  lazy val PolishedPine: Color = fromLong(0x5DA493FF)
  lazy val PompAndPower: Color = fromLong(0x86608EFF)
  lazy val Popstar: Color = fromLong(0xBE4F62FF)
  lazy val PortlandOrange: Color = fromLong(0xFF5A36FF)
  lazy val PowderBlue: Color = fromLong(0xB0E0E6FF)
  lazy val PrincetonOrange: Color = fromLong(0xF58025FF)
  lazy val ProcessYellow: Color = fromLong(0xFFEF00FF)
  lazy val Prune: Color = fromLong(0x701C1CFF)
  lazy val PrussianBlue: Color = fromLong(0x003153FF)
  lazy val PsychedelicPurple: Color = fromLong(0xDF00FFFF)
  lazy val Puce: Color = fromLong(0xCC8899FF)
  lazy val PullmanBrownUPSBrown: Color = fromLong(0x644117FF)
  lazy val Pumpkin: Color = fromLong(0xFF7518FF)
  lazy val Purple: Color = fromLong(0x6A0DADFF)
  lazy val PurpleWeb: Color = fromLong(0x800080FF)
  lazy val PurpleMunsell: Color = fromLong(0x9F00C5FF)
  lazy val PurpleX11: Color = fromLong(0xA020F0FF)
  lazy val PurpleMountainMajesty: Color = fromLong(0x9678B6FF)
  lazy val PurpleNavy: Color = fromLong(0x4E5180FF)
  lazy val PurplePizzazz: Color = fromLong(0xFE4EDAFF)
  lazy val PurplePlum: Color = fromLong(0x9C51B6FF)
  lazy val Purpureus: Color = fromLong(0x9A4EAEFF)
  lazy val QueenBlue: Color = fromLong(0x436B95FF)
  lazy val QueenPink: Color = fromLong(0xE8CCD7FF)
  lazy val QuickSilver: Color = fromLong(0xA6A6A6FF)
  lazy val QuinacridoneMagenta: Color = fromLong(0x8E3A59FF)
  lazy val RadicalRed: Color = fromLong(0xFF355EFF)
  lazy val RaisinBlack: Color = fromLong(0x242124FF)
  lazy val Rajah: Color = fromLong(0xFBAB60FF)
  lazy val Raspberry: Color = fromLong(0xE30B5DFF)
  lazy val RaspberryGlace: Color = fromLong(0x915F6DFF)
  lazy val RaspberryRose: Color = fromLong(0xB3446CFF)
  lazy val RawSienna: Color = fromLong(0xD68A59FF)
  lazy val RawUmber: Color = fromLong(0x826644FF)
  lazy val RazzleDazzleRose: Color = fromLong(0xFF33CCFF)
  lazy val Razzmatazz: Color = fromLong(0xE3256BFF)
  lazy val RazzmicBerry: Color = fromLong(0x8D4E85FF)
  lazy val RebeccaPurple: Color = fromLong(0x663399FF)
  lazy val Red: Color = fromLong(0xFF0000FF)
  lazy val RedCrayola: Color = fromLong(0xEE204DFF)
  lazy val RedMunsell: Color = fromLong(0xF2003CFF)
  lazy val RedNCS: Color = fromLong(0xC40233FF)
  lazy val RedPantone: Color = fromLong(0xED2939FF)
  lazy val RedPigment: Color = fromLong(0xED1C24FF)
  lazy val RedRYB: Color = fromLong(0xFE2712FF)
  lazy val RedOrange: Color = fromLong(0xFF5349FF)
  lazy val RedOrangeCrayola: Color = fromLong(0xFF681FFF)
  lazy val RedOrangeColorWheel: Color = fromLong(0xFF4500FF)
  lazy val RedPurple: Color = fromLong(0xE40078FF)
  lazy val RedSalsa: Color = fromLong(0xFD3A4AFF)
  lazy val RedViolet: Color = fromLong(0xC71585FF)
  lazy val RedVioletCrayola: Color = fromLong(0xC0448FFF)
  lazy val RedVioletColorWheel: Color = fromLong(0x922B3EFF)
  lazy val Redwood: Color = fromLong(0xA45A52FF)
  lazy val ResolutionBlue: Color = fromLong(0x002387FF)
  lazy val Rhythm: Color = fromLong(0x777696FF)
  lazy val RichBlack: Color = fromLong(0x004040FF)
  lazy val RichBlackFOGRA29: Color = fromLong(0x010B13FF)
  lazy val RichBlackFOGRA39: Color = fromLong(0x010203FF)
  lazy val RifleGreen: Color = fromLong(0x444C38FF)
  lazy val RobinEggBlue: Color = fromLong(0x00CCCCFF)
  lazy val RocketMetallic: Color = fromLong(0x8A7F80FF)
  lazy val RojoSpanishRed: Color = fromLong(0xA91101FF)
  lazy val RomanSilver: Color = fromLong(0x838996FF)
  lazy val Rose: Color = fromLong(0xFF007FFF)
  lazy val RoseBonbon: Color = fromLong(0xF9429EFF)
  lazy val RoseDust: Color = fromLong(0x9E5E6FFF)
  lazy val RoseEbony: Color = fromLong(0x674846FF)
  lazy val RoseMadder: Color = fromLong(0xE32636FF)
  lazy val RosePink: Color = fromLong(0xFF66CCFF)
  lazy val RosePompadour: Color = fromLong(0xED7A9BFF)
  lazy val RoseQuartz: Color = fromLong(0xAA98A9FF)
  lazy val RoseRed: Color = fromLong(0xC21E56FF)
  lazy val RoseTaupe: Color = fromLong(0x905D5DFF)
  lazy val RoseVale: Color = fromLong(0xAB4E52FF)
  lazy val Rosewood: Color = fromLong(0x65000BFF)
  lazy val RossoCorsa: Color = fromLong(0xD40000FF)
  lazy val RosyBrown: Color = fromLong(0xBC8F8FFF)
  lazy val RoyalBlueDark: Color = fromLong(0x002366FF)
  lazy val RoyalBlueLight: Color = fromLong(0x4169E1FF)
  lazy val RoyalPurple: Color = fromLong(0x7851A9FF)
  lazy val RoyalYellow: Color = fromLong(0xFADA5EFF)
  lazy val Ruber: Color = fromLong(0xCE4676FF)
  lazy val RubineRed: Color = fromLong(0xD10056FF)
  lazy val Ruby: Color = fromLong(0xE0115FFF)
  lazy val RubyRed: Color = fromLong(0x9B111EFF)
  lazy val Rufous: Color = fromLong(0xA81C07FF)
  lazy val Russet: Color = fromLong(0x80461BFF)
  lazy val RussianGreen: Color = fromLong(0x679267FF)
  lazy val RussianViolet: Color = fromLong(0x32174DFF)
  lazy val Rust: Color = fromLong(0xB7410EFF)
  lazy val RustyRed: Color = fromLong(0xDA2C43FF)
  lazy val SacramentoStateGreen: Color = fromLong(0x043927FF)
  lazy val SaddleBrown: Color = fromLong(0x8B4513FF)
  lazy val SafetyOrange: Color = fromLong(0xFF7800FF)
  lazy val SafetyOrangeBlazeOrange: Color = fromLong(0xFF6700FF)
  lazy val SafetyYellow: Color = fromLong(0xEED202FF)
  lazy val Saffron: Color = fromLong(0xF4C430FF)
  lazy val Sage: Color = fromLong(0xBCB88AFF)
  lazy val StPatricksBlue: Color = fromLong(0x23297AFF)
  lazy val Salmon: Color = fromLong(0xFA8072FF)
  lazy val SalmonPink: Color = fromLong(0xFF91A4FF)
  lazy val Sand: Color = fromLong(0xC2B280FF)
  lazy val SandDune: Color = fromLong(0x967117FF)
  lazy val SandyBrown: Color = fromLong(0xF4A460FF)
  lazy val SapGreen: Color = fromLong(0x507D2AFF)
  lazy val Sapphire: Color = fromLong(0x0F52BAFF)
  lazy val SapphireBlue: Color = fromLong(0x0067A5FF)
  lazy val SapphireCrayola: Color = fromLong(0x2D5DA1FF)
  lazy val SatinSheenGold: Color = fromLong(0xCBA135FF)
  lazy val Scarlet: Color = fromLong(0xFF2400FF)
  lazy val SchaussPink: Color = fromLong(0xFF91AFFF)
  lazy val SchoolBusYellow: Color = fromLong(0xFFD800FF)
  lazy val ScreaminGreen: Color = fromLong(0x66FF66FF)
  lazy val SeaGreen: Color = fromLong(0x2E8B57FF)
  lazy val SeaGreenCrayola: Color = fromLong(0x00FFCDFF)
  lazy val Seance: Color = fromLong(0x612086FF)
  lazy val SealBrown: Color = fromLong(0x59260BFF)
  lazy val Seashell: Color = fromLong(0xFFF5EEFF)
  lazy val SelectiveYellow: Color = fromLong(0xFFBA00FF)
  lazy val Sepia: Color = fromLong(0x704214FF)
  lazy val Shadow: Color = fromLong(0x8A795DFF)
  lazy val ShadowBlue: Color = fromLong(0x778BA5FF)
  lazy val ShamrockGreen: Color = fromLong(0x009E60FF)
  lazy val SheenGreen: Color = fromLong(0x8FD400FF)
  lazy val ShimmeringBlush: Color = fromLong(0xD98695FF)
  lazy val ShinyShamrock: Color = fromLong(0x5FA778FF)
  lazy val ShockingPink: Color = fromLong(0xFC0FC0FF)
  lazy val ShockingPinkCrayola: Color = fromLong(0xFF6FFFFF)
  lazy val Sienna: Color = fromLong(0x882D17FF)
  lazy val Silver: Color = fromLong(0xC0C0C0FF)
  lazy val SilverCrayola: Color = fromLong(0xC9C0BBFF)
  lazy val SilverMetallic: Color = fromLong(0xAAA9ADFF)
  lazy val SilverChalice: Color = fromLong(0xACACACFF)
  lazy val SilverPink: Color = fromLong(0xC4AEADFF)
  lazy val SilverSand: Color = fromLong(0xBFC1C2FF)
  lazy val Sinopia: Color = fromLong(0xCB410BFF)
  lazy val SizzlingRed: Color = fromLong(0xFF3855FF)
  lazy val SizzlingSunrise: Color = fromLong(0xFFDB00FF)
  lazy val Skobeloff: Color = fromLong(0x007474FF)
  lazy val SkyBlue: Color = fromLong(0x87CEEBFF)
  lazy val SkyBlueCrayola: Color = fromLong(0x76D7EAFF)
  lazy val SkyMagenta: Color = fromLong(0xCF71AFFF)
  lazy val SlateBlue: Color = fromLong(0x6A5ACDFF)
  lazy val SlateGray: Color = fromLong(0x708090FF)
  lazy val SlimyGreen: Color = fromLong(0x299617FF)
  lazy val Smitten: Color = fromLong(0xC84186FF)
  lazy val SmokyBlack: Color = fromLong(0x100C08FF)
  lazy val Snow: Color = fromLong(0xFFFAFAFF)
  lazy val SolidPink: Color = fromLong(0x893843FF)
  lazy val SonicSilver: Color = fromLong(0x757575FF)
  lazy val SpaceCadet: Color = fromLong(0x1D2951FF)
  lazy val SpanishBistre: Color = fromLong(0x807532FF)
  lazy val SpanishBlue: Color = fromLong(0x0070B8FF)
  lazy val SpanishCarmine: Color = fromLong(0xD10047FF)
  lazy val SpanishGray: Color = fromLong(0x989898FF)
  lazy val SpanishGreen: Color = fromLong(0x009150FF)
  lazy val SpanishOrange: Color = fromLong(0xE86100FF)
  lazy val SpanishPink: Color = fromLong(0xF7BFBEFF)
  lazy val SpanishRed: Color = fromLong(0xE60026FF)
  lazy val SpanishSkyBlue: Color = fromLong(0x00FFFFFF)
  lazy val SpanishViolet: Color = fromLong(0x4C2882FF)
  lazy val SpanishViridian: Color = fromLong(0x007F5CFF)
  lazy val SpringBud: Color = fromLong(0xA7FC00FF)
  lazy val SpringFrost: Color = fromLong(0x87FF2AFF)
  lazy val SpringGreen: Color = fromLong(0x00FF7FFF)
  lazy val SpringGreenCrayola: Color = fromLong(0xECEBBDFF)
  lazy val StarCommandBlue: Color = fromLong(0x007BB8FF)
  lazy val SteelBlue: Color = fromLong(0x4682B4FF)
  lazy val SteelPink: Color = fromLong(0xCC33CCFF)
  lazy val SteelTeal: Color = fromLong(0x5F8A8BFF)
  lazy val StilDeGrainYellow: Color = fromLong(0xFADA5EFF)
  lazy val Straw: Color = fromLong(0xE4D96FFF)
  lazy val Strawberry: Color = fromLong(0xFA5053FF)
  lazy val StrawberryBlonde: Color = fromLong(0xFF9361FF)
  lazy val SugarPlum: Color = fromLong(0x914E75FF)
  lazy val Sunglow: Color = fromLong(0xFFCC33FF)
  lazy val Sunray: Color = fromLong(0xE3AB57FF)
  lazy val Sunset: Color = fromLong(0xFAD6A5FF)
  lazy val SuperPink: Color = fromLong(0xCF6BA9FF)
  lazy val SweetBrown: Color = fromLong(0xA83731FF)
  lazy val SyracuseOrange: Color = fromLong(0xD44500FF)
  lazy val Tan: Color = fromLong(0xD2B48CFF)
  lazy val TanCrayola: Color = fromLong(0xD99A6CFF)
  lazy val Tangerine: Color = fromLong(0xF28500FF)
  lazy val TangoPink: Color = fromLong(0xE4717AFF)
  lazy val TartOrange: Color = fromLong(0xFB4D46FF)
  lazy val Taupe: Color = fromLong(0x483C32FF)
  lazy val TaupeGray: Color = fromLong(0x8B8589FF)
  lazy val TeaGreen: Color = fromLong(0xD0F0C0FF)
  lazy val TeaRose: Color = fromLong(0xF4C2C2FF)
  lazy val Teal: Color = fromLong(0x008080FF)
  lazy val TealBlue: Color = fromLong(0x367588FF)
  lazy val Telemagenta: Color = fromLong(0xCF3476FF)
  lazy val Tenne: Color = fromLong(0xCD5700FF)
  lazy val TerraCotta: Color = fromLong(0xE2725BFF)
  lazy val Thistle: Color = fromLong(0xD8BFD8FF)
  lazy val ThulianPink: Color = fromLong(0xDE6FA1FF)
  lazy val TickleMePink: Color = fromLong(0xFC89ACFF)
  lazy val TiffanyBlue: Color = fromLong(0x0ABAB5FF)
  lazy val Timberwolf: Color = fromLong(0xDBD7D2FF)
  lazy val TitaniumYellow: Color = fromLong(0xEEE600FF)
  lazy val Tomato: Color = fromLong(0xFF6347FF)
  lazy val Tourmaline: Color = fromLong(0x86A1A9FF)
  lazy val TropicalRainforest: Color = fromLong(0x00755EFF)
  lazy val TrueBlue: Color = fromLong(0x2D68C4FF)
  lazy val TrypanBlue: Color = fromLong(0x1C05B3FF)
  lazy val TuftsBlue: Color = fromLong(0x3E8EDEFF)
  lazy val Tumbleweed: Color = fromLong(0xDEAA88FF)
  lazy val Turquoise: Color = fromLong(0x40E0D0FF)
  lazy val TurquoiseBlue: Color = fromLong(0x00FFEFFF)
  lazy val TurquoiseGreen: Color = fromLong(0xA0D6B4FF)
  lazy val TurtleGreen: Color = fromLong(0x8A9A5BFF)
  lazy val Tuscan: Color = fromLong(0xFAD6A5FF)
  lazy val TuscanBrown: Color = fromLong(0x6F4E37FF)
  lazy val TuscanRed: Color = fromLong(0x7C4848FF)
  lazy val TuscanTan: Color = fromLong(0xA67B5BFF)
  lazy val Tuscany: Color = fromLong(0xC09999FF)
  lazy val TwilightLavender: Color = fromLong(0x8A496BFF)
  lazy val TyrianPurple: Color = fromLong(0x66023CFF)
  lazy val UABlue: Color = fromLong(0x0033AAFF)
  lazy val UARed: Color = fromLong(0xD9004CFF)
  lazy val Ultramarine: Color = fromLong(0x3F00FFFF)
  lazy val UltramarineBlue: Color = fromLong(0x4166F5FF)
  lazy val UltraPink: Color = fromLong(0xFF6FFFFF)
  lazy val UltraRed: Color = fromLong(0xFC6C85FF)
  lazy val Umber: Color = fromLong(0x635147FF)
  lazy val UnbleachedSilk: Color = fromLong(0xFFDDCAFF)
  lazy val UnitedNationsBlue: Color = fromLong(0x5B92E5FF)
  lazy val UniversityOfPennsylvaniaRed: Color = fromLong(0xA50021FF)
  lazy val UnmellowYellow: Color = fromLong(0xFFFF66FF)
  lazy val UPForestGreen: Color = fromLong(0x014421FF)
  lazy val UPMaroon: Color = fromLong(0x7B1113FF)
  lazy val UpsdellRed: Color = fromLong(0xAE2029FF)
  lazy val UranianBlue: Color = fromLong(0xAFDBF5FF)
  lazy val USAFABlue: Color = fromLong(0x004F98FF)
  lazy val VanDykeBrown: Color = fromLong(0x664228FF)
  lazy val Vanilla: Color = fromLong(0xF3E5ABFF)
  lazy val VanillaIce: Color = fromLong(0xF38FA9FF)
  lazy val VegasGold: Color = fromLong(0xC5B358FF)
  lazy val VenetianRed: Color = fromLong(0xC80815FF)
  lazy val Verdigris: Color = fromLong(0x43B3AEFF)
  lazy val Vermilion: Color = fromLong(0xE34234FF)
  lazy val Veronica: Color = fromLong(0xA020F0FF)
  lazy val Violet: Color = fromLong(0x8F00FFFF)
  lazy val VioletColorWheel: Color = fromLong(0x7F00FFFF)
  lazy val VioletCrayola: Color = fromLong(0x963D7FFF)
  lazy val VioletRYB: Color = fromLong(0x8601AFFF)
  lazy val VioletWeb: Color = fromLong(0xEE82EEFF)
  lazy val VioletBlue: Color = fromLong(0x324AB2FF)
  lazy val VioletBlueCrayola: Color = fromLong(0x766EC8FF)
  lazy val VioletRed: Color = fromLong(0xF75394FF)
  lazy val VioletRedPerBang: Color = fromLong(0xF0599CFF)
  lazy val Viridian: Color = fromLong(0x40826DFF)
  lazy val ViridianGreen: Color = fromLong(0x009698FF)
  lazy val VividBurgundy: Color = fromLong(0x9F1D35FF)
  lazy val VividSkyBlue: Color = fromLong(0x00CCFFFF)
  lazy val VividTangerine: Color = fromLong(0xFFA089FF)
  lazy val VividViolet: Color = fromLong(0x9F00FFFF)
  lazy val Volt: Color = fromLong(0xCEFF00FF)
  lazy val WarmBlack: Color = fromLong(0x004242FF)
  lazy val WeezyBlue: Color = fromLong(0x189BCCFF)
  lazy val Wheat: Color = fromLong(0xF5DEB3FF)
  lazy val White: Color = fromLong(0xFFFFFFFF)
  lazy val WildBlueYonder: Color = fromLong(0xA2ADD0FF)
  lazy val WildOrchid: Color = fromLong(0xD470A2FF)
  lazy val WildStrawberry: Color = fromLong(0xFF43A4FF)
  lazy val WildWatermelon: Color = fromLong(0xFC6C85FF)
  lazy val WindsorTan: Color = fromLong(0xA75502FF)
  lazy val Wine: Color = fromLong(0x722F37FF)
  lazy val WineDregs: Color = fromLong(0x673147FF)
  lazy val WinterSky: Color = fromLong(0xFF007CFF)
  lazy val WintergreenDream: Color = fromLong(0x56887DFF)
  lazy val Wisteria: Color = fromLong(0xC9A0DCFF)
  lazy val WoodBrown: Color = fromLong(0xC19A6BFF)
  lazy val Xanadu: Color = fromLong(0x738678FF)
  lazy val Xanthic: Color = fromLong(0xEEED09FF)
  lazy val Xanthous: Color = fromLong(0xF1B42FFF)
  lazy val YaleBlue: Color = fromLong(0x00356BFF)
  lazy val Yellow: Color = fromLong(0xFFFF00FF)
  lazy val YellowCrayola: Color = fromLong(0xFCE883FF)
  lazy val YellowMunsell: Color = fromLong(0xEFCC00FF)
  lazy val YellowNCS: Color = fromLong(0xFFD300FF)
  lazy val YellowPantone: Color = fromLong(0xFEDF00FF)
  lazy val YellowProcess: Color = fromLong(0xFFEF00FF)
  lazy val YellowRYB: Color = fromLong(0xFEFE33FF)
  lazy val YellowGreen: Color = fromLong(0x9ACD32FF)
  lazy val YellowGreenCrayola: Color = fromLong(0xC5E384FF)
  lazy val YellowGreenColorWheel: Color = fromLong(0x30B21AFF)
  lazy val YellowOrange: Color = fromLong(0xFFAE42FF)
  lazy val YellowOrangeColorWheel: Color = fromLong(0xFF9505FF)
  lazy val YellowSunshine: Color = fromLong(0xFFF700FF)
  lazy val YInMnBlue: Color = fromLong(0x2E5090FF)
  lazy val Zaffre: Color = fromLong(0x0014A8FF)
  lazy val Zomp: Color = fromLong(0x39A78EFF)

  def random: Color = Color.fromRGBA(math.random(), math.random(), math.random(), 1.0)

  private def hexify(value: Double): String = hexify(math.floor(value * 255.0).toInt)
  private def hexify(value: Int): String = f"$value%02x"

  private val Hex3Regex = """#?([\w\d])([\w\d])([\w\d])""".r
  private val Hex6Regex = """#?([\w\d]{2})([\w\d]{2})([\w\d]{2})""".r
  private val RGBARegex = """rgba\((\d+), (\d+), (\d+), ([\d.]+)\)""".r

  def unapply(value: String): Option[Color] = value.trim match {
    case null | "" => None
    case Hex3Regex(r, g, b) => Some(fromLong(java.lang.Long.parseLong(s"$r$r$g$g$b${b}ff", 16)))
    case Hex6Regex(r, g, b) => Some(fromLong(java.lang.Long.parseLong(s"$r$g${b}ff", 16)))
    case RGBARegex(r, g, b, a) => {
      val red = hexify(r.toInt)
      val green = hexify(g.toInt)
      val blue = hexify(b.toInt)
      val alpha = hexify(a.toDouble)
      Some(fromLong(java.lang.Long.parseLong(s"$red$green$blue$alpha", 16)))
    }
    case _ => {
      scribe.warn(s"Unknown conversion for color value from String: [$value]")
      None
    }
  }

  /**
   * Creates a new Color instance from a Long value 0xRRGGBBAA
   */
  def fromLong(value: Long): Color = new Color(value)

  /**
   * Creates a new Color instance from a hex value. It is flexible for:
   *
   * - 1-digit (represents the value for red, green, and blue)
   * - 2-digit (represents the value for red, green, and blue)
   * - 3-digit (RGB)
   * - 4-digit (RGBA)
   * - 6-digit (RRGGBB)
   * - 8-digit (RRGGBBAA)
   *
   * A preceding hash is optional.
   *
   * @param value String representation of a hex String
   */
  @scala.annotation.tailrec
  def fromHex(value: String): Color = value.length match {
    case _ if value.startsWith("#") => fromHex(value.substring(1))
    case 1 => fromHex((0 until 8).map(_ => value).mkString)
    case 2 => fromHex((0 until 4).map(_ => value).mkString)
    case 3 => {
      val r = value.charAt(0)
      val g = value.charAt(1)
      val b = value.charAt(2)
      fromHex(s"$r$r$g$g$b${b}ff")
    }
    case 4 => {
      val r = value.charAt(0)
      val g = value.charAt(1)
      val b = value.charAt(2)
      val a = value.charAt(3)
      fromHex(s"$r$r$g$g$b$b$a$a")
    }
    case 6 => {
      fromHex(s"${value}ff")
    }
    case 8 => {
      fromLong(java.lang.Long.parseLong(value, 16))
    }
    case length => throw new RuntimeException(s"Unsupported hex length ($length) for $value.")
  }

  def fromRGBA(red: Double, green: Double, blue: Double, alpha: Double): Color = {
    fromHex(s"${hexify(red)}${hexify(green)}${hexify(blue)}${hexify(alpha)}")
  }

  def fromRGBA(red: Int, green: Int, blue: Int, alpha: Double): Color = {
    fromHex(s"${hexify(red)}${hexify(green)}${hexify(blue)}${hexify(alpha)}")
  }

  def fromHSB(hue: Double, saturation: Double, brightness: Double): Color = if (saturation == 0.0) {
    val value = (brightness * 255.0 + 0.5).toInt
    fromRGBA(value, value, value, 1.0)
  } else {
    val h = (hue - math.floor(hue)) * 6.0
    val f = h - math.floor(h)
    val p = brightness * (1.0 - saturation)
    val q = brightness * (1.0 - saturation * f)
    val t = brightness * (1.0 - (saturation * (1.0 - f)))
    h.toInt match {
      case 0 => {
        val red = (brightness * 255.0 + 0.5).toInt
        val green = (t * 255.0 + 0.5).toInt
        val blue = (p * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
      case 1 => {
        val red = (q * 255.0 + 0.5).toInt
        val green = (brightness * 255.0 + 0.5).toInt
        val blue = (p * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
      case 2 => {
        val red = (p * 255.0 + 0.5).toInt
        val green = (brightness * 255.0 + 0.5).toInt
        val blue = (t * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
      case 3 => {
        val red = (p * 255.0 + 0.5).toInt
        val green = (q * 255.0 + 0.5).toInt
        val blue = (brightness * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
      case 4 => {
        val red = (t * 255.0 + 0.5).toInt
        val green = (p * 255.0 + 0.5).toInt
        val blue = (brightness * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
      case 5 => {
        val red = (brightness * 255.0 + 0.5).toInt
        val green = (p * 255.0 + 0.5).toInt
        val blue = (q * 255.0 + 0.5).toInt
        Color.fromRGBA(red, green, blue, 1.0)
      }
    }
  }
}